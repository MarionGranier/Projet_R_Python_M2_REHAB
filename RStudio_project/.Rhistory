ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
# Load required libraries
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(performance)
library(psych)
library(knitr)
# Load dataset
df_filtered <- read.csv("./data/results_FuncUsePerDay_all_patients_filtered.csv")
# Ensure columns are in the correct format
df_filtered$month <- as.factor(df_filtered$month)
df_filtered$ID <- as.factor(df_filtered$ID)
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
# Prepare data (mean FuncUseRatio for each patient and month)
monthly_means_df <- df_filtered %>%
group_by(ID, month) %>%
summarise(mean_FuncUseRatio = mean(FuncUseRatio_day, na.rm = TRUE))
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Calculate the CV based on monthly means for each patient
cv_results <- monthly_means_df %>%
group_by(ID) %>%
summarise(
mean = mean(mean_FuncUseRatio),
SD = sd(mean_FuncUseRatio),
CV = (SD / mean) * 100
)
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
# Load required libraries
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(performance)
library(psych)
library(knitr)
# Load dataset
df_filtered <- read.csv("./data/results_FuncUsePerDay_all_patients_filtered.csv")
# Ensure columns are in the correct format
df_filtered$month <- as.factor(df_filtered$month)
df_filtered$ID <- as.factor(df_filtered$ID)
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
# Prepare data (mean FuncUseRatio for each patient and month)
monthly_means_df <- df_filtered %>%
group_by(ID, month) %>%
summarise(mean_FuncUseRatio = mean(FuncUseRatio_day, na.rm = TRUE))
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Calculate the CV based on monthly means for each patient
cv_results <- monthly_means_df %>%
group_by(ID) %>%
summarise(
mean = mean(mean_FuncUseRatio),
SD = sd(mean_FuncUseRatio),
CV = (SD / mean) * 100
)
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
# Load required libraries
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(performance)
library(psych)
library(knitr)
# Load dataset
df_filtered <- read.csv("./data/results_FuncUsePerDay_all_patients_filtered.csv")
# Ensure columns are in the correct format
df_filtered$month <- as.factor(df_filtered$month)
df_filtered$ID <- as.factor(df_filtered$ID)
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
# Prepare data (mean FuncUseRatio for each patient and month)
monthly_means_df <- df_filtered %>%
group_by(ID, month) %>%
summarise(mean_FuncUseRatio = mean(FuncUseRatio_day, na.rm = TRUE))
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Calculate the CV based on monthly means for each patient
cv_results <- monthly_means_df %>%
group_by(ID) %>%
summarise(
mean = mean(mean_FuncUseRatio),
SD = sd(mean_FuncUseRatio),
CV = (SD / mean) * 100
)
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
# Load required libraries
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
library(performance)
library(psych)
library(knitr)
# Load dataset
df_filtered <- read.csv("./data/results_FuncUsePerDay_all_patients_filtered.csv")
# Ensure columns are in the correct format
df_filtered$month <- as.factor(df_filtered$month)
df_filtered$ID <- as.factor(df_filtered$ID)
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
# Prepare data (mean FuncUseRatio for each patient and month)
monthly_means_df <- df_filtered %>%
group_by(ID, month) %>%
summarise(mean_FuncUseRatio = mean(FuncUseRatio_day, na.rm = TRUE))
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Calculate the CV based on monthly means for each patient
cv_results <- monthly_means_df %>%
group_by(ID) %>%
summarise(
mean = mean(mean_FuncUseRatio),
SD = sd(mean_FuncUseRatio),
CV = (SD / mean) * 100
)
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
# Save the table in a .csv file
write.csv(cv_results, "./results/cv_results.csv", row.names = FALSE)
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Save the table in a .csv file
write.csv(icc_results, "./results/icc_results.csv", row.names = FALSE)
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Save the table in a .csv file
write.csv(icc_result, "./results/icc_results.csv", row.names = FALSE)
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
knitr::opts_chunk$set(error = TRUE, warning = FALSE)
# Load required libraries
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(tidyr)
# library(performance)
library(psych)
library(knitr)
# Load dataset
df_filtered <- read.csv("./data/results_FuncUsePerDay_all_patients_filtered.csv")
# Ensure columns are in the correct format
df_filtered$month <- as.factor(df_filtered$month)
df_filtered$ID <- as.factor(df_filtered$ID)
# Define colors for patients
colors <- RColorBrewer::brewer.pal(n = length(unique(df_filtered$ID)), name = "Set1")
# Initialize figure counter
figure_number <- 1
# Generate and save plots per patient
for (patient_id in unique(df_filtered$ID)) {
# Filter the data for the current patient
patient_data <- df_filtered[df_filtered$ID == patient_id, ]
# Create the boxplot for the current patient
p <- ggplot(patient_data, aes(x = month, y = FuncUseRatio_day, group = month)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = ID), width = 0.1, size = 2) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_line(color = "lightgray", size = 0.25),
axis.text.x = element_text(angle = 0, hjust = 0.5),
panel.grid.major.x = element_line(color = "gray", size = 0.5),
panel.grid.minor.x = element_line(color = "lightgray", size = 0.25)) +
labs(title = paste0("Figure ", figure_number, ". Boxplot of daily FuncUseRatio distributions over 6 months for ", patient_id),
x = "Month",
y = "FuncUseRatio") +
scale_color_manual(values = setNames(colors, unique(df_filtered$ID))) +
guides(color = guide_legend(title = "FuncUseRatioPerDay", labels = "FuncUseRatioPerDay"))
# Save the plot as a PNG file for each patient
ggsave(paste0("./results/boxplot_FuncUseRatio_", patient_id, ".png"), plot = p, width = 8, height = 6, bg = "white")
# Increment figure number
figure_number <- figure_number + 1
}
# Prepare data (mean FuncUseRatio for each patient and month)
monthly_means_df <- df_filtered %>%
group_by(ID, month) %>%
summarise(mean_FuncUseRatio = mean(FuncUseRatio_day, na.rm = TRUE))
# Long format table (HTML file)
kable(monthly_means_df, caption = "**Table 1.** Mean FuncUseRatio by patient and month (long format)")
# Long format table (Rstudio)
if (interactive()) {
print(monthly_means_df)
}
# Convert long to wide data format
wide_monthly_means_df <- monthly_means_df %>%
pivot_wider(names_from = month, values_from = mean_FuncUseRatio)
# Wide format table (HTML file)
kable(wide_monthly_means_df, caption = "**Table 2.** Mean FuncUseRatio by patient and month (wide format)")
# Wide format table (Rstudio)
if (interactive()) {
print(wide_monthly_means_df)
}
# Calculate ICC
icc_result <- ICC(wide_monthly_means_df[ , -1])
# Print the ICC results in HTML file
kable(icc_result$results[icc_result$results$type == "ICC2", ],
caption = "**Table 3.** ICC results for FuncUseRatio over six-months")
# Print the long monthly means dataframe in Rstudio
if (interactive()) {
print(icc_result$results[icc_result$results$type == "ICC2", ])
}
# Calculate the CV based on monthly means for each patient
cv_results <- monthly_means_df %>%
group_by(ID) %>%
summarise(
mean = mean(mean_FuncUseRatio),
SD = sd(mean_FuncUseRatio),
CV = (SD / mean) * 100
)
# Save the table in a .csv file
write.csv(cv_results, "./results/cv_results.csv", row.names = FALSE)
# CV results table (HTML file)
kable(cv_results, caption = "**Table 4.** Coefficient of Variation (CV) results")
# CV results table (Rstudio)
if (interactive()) {
print(cv_results)
}
